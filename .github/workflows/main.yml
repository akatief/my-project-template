# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  check-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check files
        run: |
          # Define the list of filenames you want to check
          FILES_TO_CHECK=("LICENSE" "README.md" "requirements.txt" "NOTICE.txt" "setup.py")

          # Initialize a variable to track missing files
          MISSING_FILES=()

          # Check if each file exists in the root directory
          for FILE in "${FILES_TO_CHECK[@]}"; do
            if [ ! -f "$FILE" ]; then
              MISSING_FILES+=("$FILE")
            fi
          done

          # Output the missing files
          if [ ${#MISSING_FILES[@]} -eq 0 ]; then
            echo "All files exist."
          else
            echo "The following files are missing:"
            for MISSING_FILE in "${MISSING_FILES[@]}"; do
              echo "- $MISSING_FILE"
            done
            echo "::error::One or more files are missing."
            exit 1
          fi

  setup:
    needs: check-files
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/setup/
        with:
          python-version: ${{ matrix.python-version }}

  linter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt
      - name: Analysing the code with pylint
        run: |
          pylint --disable=trailing-whitespace,missing-class-docstring,missing-final-newline,trailing-newlines \
                  --fail-under=9.0 \
                  $(git ls-files '*.py') || echo "::warning::Pylint check failed, but the workflow will continue."

  tests:
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./.github/workflows/setup/
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install additional dependencies
        run: pip install -r requirements-dev.txt
      - name: Run tests
        run: make test
      # - name: "Upload coverage to Codecov"
      #   uses: codecov/codecov-action@v3
        # with:
        #   fail_ci_if_error: true

  # tests_mac:
  #   needs: setup
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.9]
  #       os: [macos-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install project
  #       run: make install
  #     - name: Run tests
  #       run: make test

  # tests_win:
  #   needs: setup
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.9]
  #       os: [windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install Pip
  #       run: pip install --user --upgrade pip
  #     - name: Install project
  #       run: pip install -e .[test]
  #     - name: run tests
  #       run: pytest -s -vvvv -l --tb=long tests
